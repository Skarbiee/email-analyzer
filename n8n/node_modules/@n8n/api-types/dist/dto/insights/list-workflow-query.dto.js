"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListInsightsWorkflowQueryDto = void 0;
const zod_1 = require("zod");
const zod_class_1 = require("zod-class");
const VALID_SORT_OPTIONS = [
    'total:asc',
    'total:desc',
    'succeeded:asc',
    'succeeded:desc',
    'failed:asc',
    'failed:desc',
    'failureRate:asc',
    'failureRate:desc',
    'timeSaved:asc',
    'timeSaved:desc',
    'runTime:asc',
    'runTime:desc',
    'averageRunTime:asc',
    'averageRunTime:desc',
];
const skipValidator = zod_1.z
    .string()
    .optional()
    .transform((val) => (val ? parseInt(val, 10) : 0))
    .refine((val) => !isNaN(val), {
    message: 'Skip must be a valid number',
});
const takeValidator = zod_1.z
    .string()
    .optional()
    .transform((val) => (val ? parseInt(val, 10) : 10))
    .refine((val) => !isNaN(val), {
    message: 'Take must be a valid number',
});
const sortByValidator = zod_1.z
    .enum(VALID_SORT_OPTIONS, { message: `sortBy must be one of: ${VALID_SORT_OPTIONS.join(', ')}` })
    .optional();
class ListInsightsWorkflowQueryDto extends zod_class_1.Z.class({
    skip: skipValidator,
    take: takeValidator,
    sortBy: sortByValidator,
}) {
}
exports.ListInsightsWorkflowQueryDto = ListInsightsWorkflowQueryDto;
//# sourceMappingURL=list-workflow-query.dto.js.map